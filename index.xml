<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beppu&#39;s Blog</title>
    <link>http://beppu.github.io/index.xml</link>
    <description>Recent content on Beppu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Jan 2017 15:17:23 -0800</lastBuildDate>
    <atom:link href="http://beppu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Spacemacs Tips</title>
      <link>http://beppu.github.io/post/spacemacs-tips/</link>
      <pubDate>Fri, 06 Jan 2017 15:17:23 -0800</pubDate>
      
      <guid>http://beppu.github.io/post/spacemacs-tips/</guid>
      <description>




    
    
        
        
        
            
        
        
            
        
    

    
    
    

    
    




    
    
        
    


    

    
        &lt;p&gt;&lt;span class=&#34;image center-image&#34;&gt;
            &lt;img src=&#34;http://beppu.github.io/img/spacemacs-tips/spacemacs-logo.svg&#34; alt=&#34;Spacemacs&#34; /&gt;
        &lt;/span&gt;&lt;/p&gt;
    



&lt;p&gt;&lt;a href=&#34;http://spacemacs.org/&#34;&gt;Spacemacs&lt;/a&gt; is a radical reconfiguration of Emacs that tries to bring the good parts of
vi and emacs together while also adding some good ideas of its own.  A few months ago
I gave it a try, and the longer I use it, the more impressed I become with how well
this curated Emacs system comes together.&lt;/p&gt;

&lt;p&gt;With that said, there are a few things that were not immediately obvious to me that I
wish I had known sooner.&lt;/p&gt;

&lt;h1 id=&#34;basics&#34;&gt;Basics&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Leave the Editor Running&lt;/strong&gt; - If you&amp;rsquo;re new to Emacs, and especially if you previously
used an editor that starts up quickly like Vim, this will probably be one of the hardest
habits to break.  Emacs doesn&amp;rsquo;t start up instantaneously, so the common wisdom among Emacs
users is to start it up and leave it running for a long time while you edit various files.&lt;/p&gt;

&lt;p&gt;One thing that may help ease the pain is to create the following alias.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias e=&#39;emacsclient --no-wait&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Spacemacs automatically puts Emacs in &lt;code&gt;server-mode&lt;/code&gt; which lets &lt;code&gt;emacsclient&lt;/code&gt; tell &lt;code&gt;emacs&lt;/code&gt;
to edit files.  If you were in the terminal and came across a file you&amp;rsquo;d want to edit,
you could type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;e some-file.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Classical Emacs Bindings&lt;/strong&gt; - If you&amp;rsquo;ve used Emacs before and are used to its traditional
keybindings, don&amp;rsquo;t worry.  They&amp;rsquo;re mostly all there.  However, to get the most out of Spacemacs,
you should gradually learn to do things the Spacemacs way, and that means using the &lt;code&gt;SPC&lt;/code&gt; menu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Space Menu&lt;/strong&gt; - This is one of the most ingenious parts of Spacemacs, and it eliminates
one of the big complaints many people have about Emacs &amp;ndash; the keybindings.  I&amp;rsquo;m sorry, but
classical Emacs keybindings can be hell on your fingers and wrists, and they can be hard to
memorize too.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;SPC&lt;/code&gt; menu, on the other hand, is very easy to type, and the mnemonics that have been
picked are a lot more intuitive.  The way it works is while you&amp;rsquo;re in command mode in a buffer,
hit &lt;code&gt;SPC&lt;/code&gt; and a menu will appear.  Each character leads to either a submenu or a command.  This
presents you with a hierarchical tree of commands that can be explored and learned as you use
the Spacemacs.&lt;/p&gt;

&lt;p&gt;The more you use it, the more you may come to appreciate its genius as I have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Major Mode vs Minor Mode&lt;/strong&gt; - In Emacs terminology, a buffer may have one major mode and many
minor modes activated.  A mode usually defines keybindings and special behaviors such as automatic
indentation for programming languages.  I don&amp;rsquo;t know what makes a mode major versus minor, but it&amp;rsquo;s
not essential knowledge at this time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Packages&lt;/strong&gt; - Emacs has a packaging system, and traditionally, you&amp;rsquo;d install them by
typing &lt;code&gt;M-x package-install&lt;/code&gt;, but that&amp;rsquo;s &lt;strong&gt;NOT&lt;/strong&gt; how you do things in Spacemacs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Layers&lt;/strong&gt; - Spacemacs has something called layers, and this is where you want
to look first for extra functionality. A layer takes a package (or a set of
packages) and adapts them to the Spacemacs way which usually means adding
entries to the &lt;code&gt;SPC&lt;/code&gt; menu and setting a few variables. Layers are usually small,
and you can find a list of them by typing &lt;code&gt;SPC h SPC&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A complete list is also available at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/syl20bnr/spacemacs/tree/master/layers&#34;&gt;https://github.com/syl20bnr/spacemacs/tree/master/layers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spacemacs.org/layers/LAYERS.html&#34;&gt;http://spacemacs.org/layers/LAYERS.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;configuration&#34;&gt;Configuration&lt;/h1&gt;

&lt;p&gt;To add a layer to your Spacemacs configuration, you edit your &lt;code&gt;~/.spacemacs&lt;/code&gt; file, and you do that by
typing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC f e d&lt;/code&gt; - edit ~/.spacemacs file&lt;/p&gt;

&lt;p&gt;Although this is a big file, most of your time will be spent with these 3 symbols:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;dotspacemacs-configuration-layers&lt;/strong&gt; - This is a list of layers you want to use.  To install a new layer, add it to the list and restart emacs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dotspacemacs-additional-packages&lt;/strong&gt; - This is a list of extra packages you want.  If you need a package that hasn&amp;rsquo;t had a layer made for it yet, this is where you add it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dotspacemacs/user-config&lt;/strong&gt; - This is a function that is run during Spacemacs startup.  If you need to set some variables (such as indentation settings) this is where you&amp;rsquo;d do it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;SPC q R&lt;/code&gt; - This is a handy way to restart emacs.&lt;/p&gt;

&lt;h1 id=&#34;navigation&#34;&gt;Navigation&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Window Management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC w /&lt;/code&gt; - Split window vertically.  (&lt;code&gt;C-w v&lt;/code&gt; in vim)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC w -&lt;/code&gt; - Split window horizontally. (&lt;code&gt;C-w s&lt;/code&gt; in vim)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC 1&lt;/code&gt;, &lt;code&gt;SPC 2&lt;/code&gt;, &amp;hellip; &lt;code&gt;SPC 9&lt;/code&gt; - Switch to window N.  Notice that each window has a little number in the bottom
left corner.  This lets you switch to windows in O(1) time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;File Management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC f t&lt;/code&gt; - Toggle neotree.  This is very similar to vim&amp;rsquo;s NERDTree, and Spacemacs favors neotree over the traditional speedbar for file navigation.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC 0&lt;/code&gt; - Switch to the neotree window.  Window 0 is specially reserved just for neotree.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC p f&lt;/code&gt; - Open file via projectile.  This is nice if you&amp;rsquo;re working on a project, because it lets you complete a filename within the project you&amp;rsquo;re in, and it seems to know what files to ignore.  For example, if you were in a node.js project, it knows to ignore &lt;strong&gt;node_modules/&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC f f&lt;/code&gt; - Open file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC b b&lt;/code&gt; - Switch to buffer.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC b d&lt;/code&gt; - Delete buffer.  (&lt;code&gt;:bd&lt;/code&gt; in vim)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC j i&lt;/code&gt; - Go to imenu location in current buffer.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC j I&lt;/code&gt; - Go to imenu location in all open buffers.  &lt;strong&gt;Imenu&lt;/strong&gt; is a game changer.  This lets you jump directly to function definitions by name.&lt;/p&gt;

&lt;h1 id=&#34;documentation&#34;&gt;Documentation&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;SPC h d b&lt;/code&gt; - Discover key binding.  This will help you find the functionality you&amp;rsquo;re looking for.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC h d f&lt;/code&gt; - Show docstring for an elisp function.  This is very useful if you start getting into serious elisp hacking.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC h SPC&lt;/code&gt; - Show Spacemacs documentation.&lt;/p&gt;

&lt;h1 id=&#34;miscellaneous&#34;&gt;Miscellaneous&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;SPC T s&lt;/code&gt; - Switch themes.  (Add the &lt;strong&gt;themes-megapack&lt;/strong&gt; layer to get a big selection.)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC T T&lt;/code&gt; - Toggle transparency.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC t TAB&lt;/code&gt; - Toggle indent guide.  If you use a language where indentation is significant, this is very useful.  Try it and see for yourself.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC t n&lt;/code&gt; - Toggle line numbers.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;,&lt;/code&gt; - The comma is a shortcut for &lt;code&gt;SPC m&lt;/code&gt; which is where all the major mode bindings are.  Depending on what major mode you&amp;rsquo;re
in, you may get a completely different set of commands under &lt;code&gt;SPC m&lt;/code&gt;.  However, a lot of useful functionality is organized under &lt;code&gt;SPC m&lt;/code&gt;, so &lt;code&gt;,&lt;/code&gt; gets you there with one fewer keystroke.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SPC :&lt;/code&gt; - This is a shortcut for &lt;code&gt;M-x&lt;/code&gt;.  In classic Emacs, &lt;code&gt;M-x&lt;/code&gt; was your gateway to all kinds of emacs functions, and there
are many functions that are only reachable through this, so it&amp;rsquo;s good to know.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C-g&lt;/code&gt; - Abort!  If you find yourself in a funky state, Control-G can usually get you out of it.&lt;/p&gt;

&lt;p&gt;Note that in older version of Spacemacs, it was &lt;code&gt;SPC SPC&lt;/code&gt; which was easier to type, but I think they decided to establish
a parallel between Vim&amp;rsquo;s &lt;code&gt;:&lt;/code&gt; and Spacemacs&amp;rsquo; &lt;code&gt;SPC :&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;enjoy-spacemacs&#34;&gt;Enjoy Spacemacs&lt;/h1&gt;

&lt;p&gt;Play with it.  Try these key combinations out.  Hopefully, you&amp;rsquo;ll come to appreciate how nice Spacemacs can be.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spec-ulation</title>
      <link>http://beppu.github.io/post/spec-ulation/</link>
      <pubDate>Sat, 10 Dec 2016 18:47:59 -0800</pubDate>
      
      <guid>http://beppu.github.io/post/spec-ulation/</guid>
      <description>


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/oyLBGkS5ICk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=oyLBGkS5ICk&#34;&gt;https://www.youtube.com/watch?v=oyLBGkS5ICk&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;tl-dw&#34;&gt;tl;dw&lt;/h1&gt;

&lt;p&gt;When Rich Hickey speaks, it&amp;rsquo;s a good idea to listen. He is able to see things
that many of the rest of us cannot, and he is able to analyze and explain his
thoughts with a precision that is rare even among programmers.&lt;/p&gt;

&lt;p&gt;Little did I know that there was a problem with semantic versioning. It seemed
like a reasonable system, and I never gave it a second thought until I watched
this presentation where Rich exposed what the semantics of this system actually
were.&lt;/p&gt;

&lt;h2 id=&#34;briefly-the-semantics-of-x-y-z&#34;&gt;Briefly, the semantics of x.y.z&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;z changes - don&amp;rsquo;t care.&lt;/li&gt;
&lt;li&gt;y changes - don&amp;rsquo;t care.&lt;/li&gt;
&lt;li&gt;x changes - you&amp;rsquo;re screwed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;rsquo;s all this system can tell you.&lt;/p&gt;

&lt;p&gt;Furthermore, this system implicitly formalizes software breakage by saying if
you change &lt;strong&gt;x&lt;/strong&gt;, you&amp;rsquo;re allowed to make backward incompatible changes.&lt;/p&gt;

&lt;p&gt;However, do we have to break our software?&lt;/p&gt;

&lt;p&gt;Rich points us toward another way.&lt;/p&gt;

&lt;h1 id=&#34;0-00-spec-ulation-a-id-sec-1-2-name-sec-1-2-a&#34;&gt;0:00 Spec-ulation&lt;a id=&#34;sec-1-2&#34; name=&#34;sec-1-2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Rich Hickey&lt;/p&gt;

&lt;h1 id=&#34;0-58-this-is-not-a-talk-about-spec-a-id-sec-1-3-name-sec-1-3-a&#34;&gt;0:58 This is not a talk about spec&lt;a id=&#34;sec-1-3&#34; name=&#34;sec-1-3&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;it-s-a-talk-about-what-spec-is-about-a-id-sec-1-3-1-name-sec-1-3-1-a&#34;&gt;It&amp;rsquo;s a talk about what spec is about&lt;a id=&#34;sec-1-3-1&#34; name=&#34;sec-1-3-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Giving something to someone that they can use&lt;/li&gt;
&lt;li&gt;Making a commitment

&lt;ol&gt;
&lt;li&gt;i.e. not taking it away later&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;2-46-change-a-id-sec-1-4-name-sec-1-4-a&#34;&gt;2:46 Change&lt;a id=&#34;sec-1-4&#34; name=&#34;sec-1-4&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;is it a thing?&lt;/p&gt;

&lt;h1 id=&#34;3-35-change-a-id-sec-1-5-name-sec-1-5-a&#34;&gt;3:35 &amp;lsquo;Change&amp;rsquo;&lt;a id=&#34;sec-1-5&#34; name=&#34;sec-1-5&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;origin-a-id-sec-1-5-1-name-sec-1-5-1-a&#34;&gt;Origin:&lt;a id=&#34;sec-1-5-1&#34; name=&#34;sec-1-5-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;from Latin cambire &amp;ldquo;to exchange, barter&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;you-could-change-a-cow-into-wheat-a-id-sec-1-5-2-name-sec-1-5-2-a&#34;&gt;You could change a cow into wheat!&lt;a id=&#34;sec-1-5-2&#34; name=&#34;sec-1-5-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;c.f. Eurogames&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;one-sided-change-is-x2026-theft-a-id-sec-1-5-3-name-sec-1-5-3-a&#34;&gt;One-sided change is&amp;#x2026; theft?&lt;a id=&#34;sec-1-5-3&#34; name=&#34;sec-1-5-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Anti-social at least&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;productivity-and-soul-crushing-at-worst-a-id-sec-1-5-4-name-sec-1-5-4-a&#34;&gt;Productivity and soul-crushing at worst?&lt;a id=&#34;sec-1-5-4&#34; name=&#34;sec-1-5-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;5-13-a-id-sec-1-6-name-sec-1-6-a&#34;&gt;5:13&lt;a id=&#34;sec-1-6&#34; name=&#34;sec-1-6&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;We want our software (esp.
libraries/services to be
different/better tomorrow.&lt;/p&gt;

&lt;p&gt;What will that mean for our consumers?&lt;/p&gt;

&lt;h1 id=&#34;5-42-dependencies-a-id-sec-1-7-name-sec-1-7-a&#34;&gt;5:42 Dependencies&lt;a id=&#34;sec-1-7&#34; name=&#34;sec-1-7&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;[image of versioned library dependency tree]&lt;/p&gt;

&lt;h1 id=&#34;6-59-but-x2026-a-id-sec-1-8-name-sec-1-8-a&#34;&gt;6:59 But&amp;#x2026;&lt;a id=&#34;sec-1-8&#34; name=&#34;sec-1-8&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;artifacts-don-t-actually-use-other-artifacts-a-id-sec-1-8-1-name-sec-1-8-1-a&#34;&gt;Artifacts don&amp;rsquo;t actually use other artifacts&lt;a id=&#34;sec-1-8-1&#34; name=&#34;sec-1-8-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;there-is-nothing-in-the-code-about-artifacts-a-id-sec-1-8-2-name-sec-1-8-2-a&#34;&gt;There is nothing in the code about artifacts&lt;a id=&#34;sec-1-8-2&#34; name=&#34;sec-1-8-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;7-45-dependencies-redux-a-id-sec-1-9-name-sec-1-9-a&#34;&gt;7:45 Dependencies Redux&lt;a id=&#34;sec-1-9&#34; name=&#34;sec-1-9&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;[image of versioned library dependency tree broken down by namespace]
[exposes opportunity for dead code elimination; don&amp;rsquo;t need library z]&lt;/p&gt;

&lt;h1 id=&#34;9-46-but-x2026-a-id-sec-1-10-name-sec-1-10-a&#34;&gt;9:46 But&amp;#x2026;&lt;a id=&#34;sec-1-10&#34; name=&#34;sec-1-10&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;namespaces-packages-don-t-actually-use-other-namespaces-packages-a-id-sec-1-10-1-name-sec-1-10-1-a&#34;&gt;Namespaces/packages don&amp;rsquo;t actually use other namespaces/packages&lt;a id=&#34;sec-1-10-1&#34; name=&#34;sec-1-10-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;at-least-require-import-appear-in-the-code-a-id-sec-1-10-2-name-sec-1-10-2-a&#34;&gt;At least require/import appear in the code&lt;a id=&#34;sec-1-10-2&#34; name=&#34;sec-1-10-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;where-is-the-mapping-to-artifacts-no-mapping-of-artifact-to-namespaces-a-id-sec-1-10-3-name-sec-1-10-3-a&#34;&gt;Where is the mapping to artifacts? [no mapping of artifact to namespaces]&lt;a id=&#34;sec-1-10-3&#34; name=&#34;sec-1-10-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;10-48-dependency-truth-code-a-id-sec-1-11-name-sec-1-11-a&#34;&gt;10:48 Dependency Truth (code)&lt;a id=&#34;sec-1-11&#34; name=&#34;sec-1-11&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;[image of namespaces further broken down by function dependencies]
[shows hat lib X is not a true dependency]&lt;/p&gt;

&lt;h1 id=&#34;13-45-do-deps-force-versioning-a-id-sec-1-12-name-sec-1-12-a&#34;&gt;13:45 Do deps Force Versioning?&lt;a id=&#34;sec-1-12&#34; name=&#34;sec-1-12&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&amp;ldquo;What you can do is let Semantic Versioning provide you
with a sane way to release and upgrade packages without
having to roll new versions of dependent packages&amp;rdquo;
&lt;a href=&#34;http://semver.org/spec/v2.0.0.html&#34;&gt;http://semver.org/spec/v2.0.0.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;is-that-what-happens-a-id-sec-1-12-1-name-sec-1-12-1-a&#34;&gt;Is that what happens?&lt;a id=&#34;sec-1-12-1&#34; name=&#34;sec-1-12-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;often-no-cascading-version-bumps-a-id-sec-1-12-2-name-sec-1-12-2-a&#34;&gt;Often, no, cascading version bumps&lt;a id=&#34;sec-1-12-2&#34; name=&#34;sec-1-12-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;to let root &amp;lsquo;know&amp;rsquo; about improvements to leaves, even if path nodes&amp;rsquo; code unchanged&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;level violation&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;15-27-names-levels-scopes-contexts-a-id-sec-1-13-name-sec-1-13-a&#34;&gt;15:27 Names, Levels, Scopes, Contexts&lt;a id=&#34;sec-1-13&#34; name=&#34;sec-1-13&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;fns-depend-on-call-fns-by-name-a-id-sec-1-13-1-name-sec-1-13-1-a&#34;&gt;fns depend on (call) fns by name&lt;a id=&#34;sec-1-13-1&#34; name=&#34;sec-1-13-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;ns-packages-requires-includes-set-up-a-context-in-which-those-calls-can-succeed-a-id-sec-1-13-2-name-sec-1-13-2-a&#34;&gt;ns/packages requires/includes set up a context in which those calls can succeed&lt;a id=&#34;sec-1-13-2&#34; name=&#34;sec-1-13-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;artifact-deps-poms-set-up-a-context-in-which-those-requires-can-succeed-a-id-sec-1-13-3-name-sec-1-13-3-a&#34;&gt;Artifact deps/poms set up a context in which those requires can succeed&lt;a id=&#34;sec-1-13-3&#34; name=&#34;sec-1-13-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;fn-name-scopes-include-ns-but-not-artifact-a-id-sec-1-13-4-name-sec-1-13-4-a&#34;&gt;fn name scopes include ns but not artifact&lt;a id=&#34;sec-1-13-4&#34; name=&#34;sec-1-13-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;artifact context is MAGIC&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;17-19-basis-a-id-sec-1-14-name-sec-1-14-a&#34;&gt;17:19 Basis&lt;a id=&#34;sec-1-14&#34; name=&#34;sec-1-14&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;why-do-we-put-things-in-our-deps-a-id-sec-1-14-1-name-sec-1-14-1-a&#34;&gt;Why do we put things in our deps?&lt;a id=&#34;sec-1-14-1&#34; name=&#34;sec-1-14-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We need access to libs while developing&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Maven chases transitive deps&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Incorporated in artifact to communicate needs to our consumers&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;ldquo;we tested against x,y,z&amp;rdquo;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;but-course-grained-implies-too-much-a-id-sec-1-14-2-name-sec-1-14-2-a&#34;&gt;But, course-grained, implies too much&lt;a id=&#34;sec-1-14-2&#34; name=&#34;sec-1-14-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;doesn&amp;rsquo;t capture actual deps, just context&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;19-49-ex-changes-in-software-important-declarations-a-id-sec-1-15-name-sec-1-15-a&#34;&gt;19:49 (Ex)changes in Software     :important:declarations:&lt;a id=&#34;sec-1-15&#34; name=&#34;sec-1-15&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;what-is-required-a-id-sec-1-15-1-name-sec-1-15-1-a&#34;&gt;What is required?&lt;a id=&#34;sec-1-15-1&#34; name=&#34;sec-1-15-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;fn - args&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ns - var names&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;artifact  ns/package names/paths&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;what-is-provided-a-id-sec-1-15-2-name-sec-1-15-2-a&#34;&gt;What is provided?&lt;a id=&#34;sec-1-15-2&#34; name=&#34;sec-1-15-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;fn - ret (proc/service effect)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ns - vars/fns&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;artifact - namespaces/packages&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;22-11-growing-your-software-a-id-sec-1-16-name-sec-1-16-a&#34;&gt;22:11 Growing Your Software&lt;a id=&#34;sec-1-16&#34; name=&#34;sec-1-16&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;accretion-a-id-sec-1-16-1-name-sec-1-16-1-a&#34;&gt;Accretion&lt;a id=&#34;sec-1-16-1&#34; name=&#34;sec-1-16-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;provide more&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;relaxation-a-id-sec-1-16-2-name-sec-1-16-2-a&#34;&gt;Relaxation&lt;a id=&#34;sec-1-16-2&#34; name=&#34;sec-1-16-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;require less&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;fixation-a-id-sec-1-16-3-name-sec-1-16-3-a&#34;&gt;Fixation&lt;a id=&#34;sec-1-16-3&#34; name=&#34;sec-1-16-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;bash bugs&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;24-14-breaking-your-software-a-id-sec-1-17-name-sec-1-17-a&#34;&gt;24:14 Breaking Your Software&lt;a id=&#34;sec-1-17&#34; name=&#34;sec-1-17&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;require-more-a-id-sec-1-17-1-name-sec-1-17-1-a&#34;&gt;Require more&lt;a id=&#34;sec-1-17-1&#34; name=&#34;sec-1-17-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;provide-less-a-id-sec-1-17-2-name-sec-1-17-2-a&#34;&gt;Provide less&lt;a id=&#34;sec-1-17-2&#34; name=&#34;sec-1-17-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;unrelated-stuff-under-same-name-a-id-sec-1-17-3-name-sec-1-17-3-a&#34;&gt;Unrelated stuff under same name&lt;a id=&#34;sec-1-17-3&#34; name=&#34;sec-1-17-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;25-55-change-is-not-a-thing-a-id-sec-1-18-name-sec-1-18-a&#34;&gt;25:55 Change is Not a Thing&lt;a id=&#34;sec-1-18&#34; name=&#34;sec-1-18&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;it-s-one-of-two-things-a-id-sec-1-18-1-name-sec-1-18-1-a&#34;&gt;It&amp;rsquo;s one of two things&lt;a id=&#34;sec-1-18-1&#34; name=&#34;sec-1-18-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Growth&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Breakage&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;in-the-small-fns-spec-can-help-us-determine-which-prevent-breaking-specs-a-id-sec-1-18-2-name-sec-1-18-2-a&#34;&gt;In the small (fns), spec can help us determine which, prevent breaking specs&lt;a id=&#34;sec-1-18-2&#34; name=&#34;sec-1-18-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;as-long-as-we-don-t-try-to-do-something-silly-like-versioning-specs-a-id-sec-1-18-3-name-sec-1-18-3-a&#34;&gt;As long as we don&amp;rsquo;t try to do something silly like versioning specs!&lt;a id=&#34;sec-1-18-3&#34; name=&#34;sec-1-18-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;27-56-recognizing-collections-a-id-sec-1-19-name-sec-1-19-a&#34;&gt;27:56 Recognizing Collections&lt;a id=&#34;sec-1-19&#34; name=&#34;sec-1-19&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;you-only-change-a-collection-by-adding-removing-members-a-id-sec-1-19-1-name-sec-1-19-1-a&#34;&gt;You only &amp;lsquo;change&amp;rsquo; a collection by adding/removing members&lt;a id=&#34;sec-1-19-1&#34; name=&#34;sec-1-19-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;adding-growth-removing-breakage-a-id-sec-1-19-2-name-sec-1-19-2-a&#34;&gt;Adding = growth, removing = breakage&lt;a id=&#34;sec-1-19-2&#34; name=&#34;sec-1-19-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;namespaces-collections-of-vars-fns-a-id-sec-1-19-3-name-sec-1-19-3-a&#34;&gt;Namespaces - collections of vars/fns&lt;a id=&#34;sec-1-19-3&#34; name=&#34;sec-1-19-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;artifacts-collections-of-namespaces-packages-a-id-sec-1-19-4-name-sec-1-19-4-a&#34;&gt;Artifacts - collections of namespaces/packages&lt;a id=&#34;sec-1-19-4&#34; name=&#34;sec-1-19-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;don-t-conflate-levels-a-id-sec-1-19-5-name-sec-1-19-5-a&#34;&gt;Don&amp;rsquo;t conflate levels!&lt;a id=&#34;sec-1-19-5&#34; name=&#34;sec-1-19-5&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;My family doesn&amp;rsquo;t change when I put on a hat&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;everything-intersting-happens-at-the-leaves-a-id-sec-1-19-6-name-sec-1-19-6-a&#34;&gt;(Everything intersting happens at the leaves.)&lt;a id=&#34;sec-1-19-6&#34; name=&#34;sec-1-19-6&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;29-52-semantic-versioning-semantics-a-id-sec-1-20-name-sec-1-20-a&#34;&gt;29:52 &amp;ldquo;Semantic&amp;rdquo; Versioning &amp;ldquo;Semantics&amp;rdquo;&lt;a id=&#34;sec-1-20&#34; name=&#34;sec-1-20&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;1-2-changed-a-id-sec-1-20-1-name-sec-1-20-1-a&#34;&gt;1.2.changed&lt;a id=&#34;sec-1-20-1&#34; name=&#34;sec-1-20-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&amp;ldquo;you don&amp;rsquo;t care&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;1-changed-0-a-id-sec-1-20-2-name-sec-1-20-2-a&#34;&gt;1.changed.0&lt;a id=&#34;sec-1-20-2&#34; name=&#34;sec-1-20-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&amp;ldquo;you don&amp;rsquo;t care&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;changed-0-0-a-id-sec-1-20-3-name-sec-1-20-3-a&#34;&gt;changed.0.0&lt;a id=&#34;sec-1-20-3&#34; name=&#34;sec-1-20-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&amp;ldquo;you&amp;rsquo;re screwed&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;31-18-even-worse-x2026-a-id-sec-1-21-name-sec-1-21-a&#34;&gt;31:18 Even worse&amp;#x2026;&lt;a id=&#34;sec-1-21&#34; name=&#34;sec-1-21&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;you-might-be-screwed-a-id-sec-1-21-1-name-sec-1-21-1-a&#34;&gt;&amp;ldquo;you might be screwed&amp;rdquo;&lt;a id=&#34;sec-1-21-1&#34; name=&#34;sec-1-21-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;considered-covering-of-change-at-all-levels-a-id-sec-1-21-2-name-sec-1-21-2-a&#34;&gt;Considered covering of change at all levels&lt;a id=&#34;sec-1-21-2&#34; name=&#34;sec-1-21-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Good luck determining where&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;might-just-as-well-change-the-name-a-id-sec-1-21-3-name-sec-1-21-3-a&#34;&gt;Might just as well change the name&lt;a id=&#34;sec-1-21-3&#34; name=&#34;sec-1-21-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;32-26-might-as-well-change-the-name-a-id-sec-1-22-name-sec-1-22-a&#34;&gt;32:26 Might as well change the name&lt;a id=&#34;sec-1-22&#34; name=&#34;sec-1-22&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;32-28-might-as-well-change-the-name-a-id-sec-1-23-name-sec-1-23-a&#34;&gt;32:28 MIGHT AS WELL CHANGE THE NAME&lt;a id=&#34;sec-1-23&#34; name=&#34;sec-1-23&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;32-52-but-x2026-a-id-sec-1-24-name-sec-1-24-a&#34;&gt;32:52 But&amp;#x2026;&lt;a id=&#34;sec-1-24&#34; name=&#34;sec-1-24&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;that&amp;rsquo;s not change,
That&amp;rsquo;s a new thing!
Right.&lt;/p&gt;

&lt;h1 id=&#34;33-09-which-name-a-id-sec-1-25-name-sec-1-25-a&#34;&gt;33:09 Which name?&lt;a id=&#34;sec-1-25&#34; name=&#34;sec-1-25&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Levels again&lt;/p&gt;

&lt;h1 id=&#34;33-39-requiring-more-args-providing-less-on-return-a-id-sec-1-26-name-sec-1-26-a&#34;&gt;33:39 Requiring More args?  Providing Less on return?&lt;a id=&#34;sec-1-26&#34; name=&#34;sec-1-26&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;i-e-incompatible-spec-a-id-sec-1-26-1-name-sec-1-26-1-a&#34;&gt;i.e. incompatible spec&lt;a id=&#34;sec-1-26-1&#34; name=&#34;sec-1-26-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;new-function-a-id-sec-1-26-2-name-sec-1-26-2-a&#34;&gt;new function&lt;a id=&#34;sec-1-26-2&#34; name=&#34;sec-1-26-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;old-ns/foo-2 or new-ns/foo&lt;/p&gt;

&lt;h2 id=&#34;n-b-the-namespace-is-port-of-the-name-a-id-sec-1-26-3-name-sec-1-26-3-a&#34;&gt;N.B - the namespace is port of the name&lt;a id=&#34;sec-1-26-3&#34; name=&#34;sec-1-26-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;ns aliases can ease transition&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;36-14-providing-fewer-fns-vars-a-id-sec-1-27-name-sec-1-27-a&#34;&gt;36:14 Providing Fewer fns/vars?&lt;a id=&#34;sec-1-27&#34; name=&#34;sec-1-27&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;new-namespace-package-a-id-sec-1-27-1-name-sec-1-27-1-a&#34;&gt;New namespace/package&lt;a id=&#34;sec-1-27-1&#34; name=&#34;sec-1-27-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;37-20-providing-fewer-namespaces-packages-a-id-sec-1-28-name-sec-1-28-a&#34;&gt;37:20 Providing Fewer namespaces/packages?&lt;a id=&#34;sec-1-28&#34; name=&#34;sec-1-28&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;new-artifactid-a-id-sec-1-28-1-name-sec-1-28-1-a&#34;&gt;New artifactId?&lt;a id=&#34;sec-1-28-1&#34; name=&#34;sec-1-28-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;but-x2026-that-s-what-major-segment-is-for-a-id-sec-1-28-2-name-sec-1-28-2-a&#34;&gt;but&amp;#x2026; that&amp;rsquo;s what MAJOR segment is for?&lt;a id=&#34;sec-1-28-2&#34; name=&#34;sec-1-28-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;no, &amp;ldquo;any backwards incompatible changes&amp;rdquo;&lt;/p&gt;

&lt;p&gt;i.e. too-broad &amp;ldquo;semantic&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The problem is artifact-&amp;gt;namespaces magic means possibility of collision&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;No &amp;lsquo;scope&amp;rsquo; implicitly renaming children&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;rich-was-not-sure-what-the-right-strategy-for-this-situaion-is-a-id-sec-1-28-3-name-sec-1-28-3-a&#34;&gt;[Rich was not sure what the right strategy for this situaion is.]&lt;a id=&#34;sec-1-28-3&#34; name=&#34;sec-1-28-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;40-33-doesn-t-doing-the-right-thing-name-wise-make-you-reluctant-to-remove-things-a-id-sec-1-29-name-sec-1-29-a&#34;&gt;40:33 Doesn&amp;rsquo;t Doing the Right Thing Name-wise Make You Reluctant to Remove Things?&lt;a id=&#34;sec-1-29&#34; name=&#34;sec-1-29&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Yes. Good.&lt;/p&gt;

&lt;h1 id=&#34;41-02-breaking-changes-are-broken-a-id-sec-1-30-name-sec-1-30-a&#34;&gt;41:02 Breaking Changes are Broken&lt;a id=&#34;sec-1-30&#34; name=&#34;sec-1-30&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;full-stop-a-id-sec-1-30-1-name-sec-1-30-1-a&#34;&gt;Full Stop&lt;a id=&#34;sec-1-30-1&#34; name=&#34;sec-1-30-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;don-t-do-it-a-id-sec-1-30-2-name-sec-1-30-2-a&#34;&gt;Don&amp;rsquo;t do it&lt;a id=&#34;sec-1-30-2&#34; name=&#34;sec-1-30-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;don-t-try-to-figure-out-the-best-way-to-do-it-a-id-sec-1-30-3-name-sec-1-30-3-a&#34;&gt;Don&amp;rsquo;t try to figure out the best way to do it&lt;a id=&#34;sec-1-30-3&#34; name=&#34;sec-1-30-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;avoid-breakage-by-turning-it-into-accretion-a-id-sec-1-30-4-name-sec-1-30-4-a&#34;&gt;Avoid breakage by turning it into accretion&lt;a id=&#34;sec-1-30-4&#34; name=&#34;sec-1-30-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;old and new can co-exist&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;42-25-so-maven-is-broken-a-id-sec-1-31-name-sec-1-31-a&#34;&gt;42:25 So Maven is Broken?&lt;a id=&#34;sec-1-31&#34; name=&#34;sec-1-31&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;not-really-how-we-use-it-may-be-broken-a-id-sec-1-31-1-name-sec-1-31-1-a&#34;&gt;Not really - how we use it may be broken&lt;a id=&#34;sec-1-31-1&#34; name=&#34;sec-1-31-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;maven-central-doesn-t-let-you-change-artifacts-a-id-sec-1-31-2-name-sec-1-31-2-a&#34;&gt;Maven central doesn&amp;rsquo;t let you &amp;lsquo;change&amp;rsquo; artifacts&lt;a id=&#34;sec-1-31-2&#34; name=&#34;sec-1-31-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;and never &amp;lsquo;breaks&amp;rsquo;, is not versioned!!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;no &amp;ldquo;I&amp;rsquo;m using maven central 1234567.0.0&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;you-re-always-hapy-to-use-latest-maven-central-a-id-sec-1-31-3-name-sec-1-31-3-a&#34;&gt;You&amp;rsquo;re always hapy to use latest maven central&lt;a id=&#34;sec-1-31-3&#34; name=&#34;sec-1-31-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Why?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;it&amp;rsquo;s an accreting collection of immutable things&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;44-27-insert-rotten-sandwich-image-here-a-id-sec-1-32-name-sec-1-32-a&#34;&gt;44:27 (insert rotten sandwich image here)&lt;a id=&#34;sec-1-32&#34; name=&#34;sec-1-32&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;46-29-so-semver-is-broken-a-id-sec-1-33-name-sec-1-33-a&#34;&gt;46:29 So SemVer is Broken?&lt;a id=&#34;sec-1-33&#34; name=&#34;sec-1-33&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;yes-a-id-sec-1-33-1-name-sec-1-33-1-a&#34;&gt;Yes&lt;a id=&#34;sec-1-33-1&#34; name=&#34;sec-1-33-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It is, in part, about how to ship breakage&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;and the other &amp;lsquo;semantics&amp;rsquo; are of little utility&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;what-instead-a-id-sec-1-33-2-name-sec-1-33-2-a&#34;&gt;What instead?&lt;a id=&#34;sec-1-33-2&#34; name=&#34;sec-1-33-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Maybe chronological versioning?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;YYYYMMDD.HHMMSS&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Conveys more and supports some forms of relativism&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;48-47-what-about-git-a-id-sec-1-34-name-sec-1-34-a&#34;&gt;48:47 What about Git?&lt;a id=&#34;sec-1-34&#34; name=&#34;sec-1-34&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;wonderful-immutable-truth-of-the-code-system-widely-adopted-a-id-sec-1-34-1-name-sec-1-34-1-a&#34;&gt;Wonderful, immutable, truth-of-the-code system, widely adopted&lt;a id=&#34;sec-1-34-1&#34; name=&#34;sec-1-34-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;content-based-addressing-a-id-sec-1-34-2-name-sec-1-34-2-a&#34;&gt;Content-based addressing&lt;a id=&#34;sec-1-34-2&#34; name=&#34;sec-1-34-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;almost-completely-ignored-by-artifacts-versioning-even-though-code-basis-a-id-sec-1-34-3-name-sec-1-34-3-a&#34;&gt;Almost completely ignored by artifacts/versioning, even though code basis&lt;a id=&#34;sec-1-34-3&#34; name=&#34;sec-1-34-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;deserves-a-role-a-id-sec-1-34-4-name-sec-1-34-4-a&#34;&gt;Deserves a role&lt;a id=&#34;sec-1-34-4&#34; name=&#34;sec-1-34-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;but, SHAs vs order/causality/readability&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;50-37-it-s-a-social-thing-a-id-sec-1-35-name-sec-1-35-a&#34;&gt;50:37 It&amp;rsquo;s a Social Thing&lt;a id=&#34;sec-1-35&#34; name=&#34;sec-1-35&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;we-won-t-be-albe-to-tech-ourselves-out-of-this-a-id-sec-1-35-1-name-sec-1-35-1-a&#34;&gt;We won&amp;rsquo;t be albe to tech ourselves out of this&lt;a id=&#34;sec-1-35-1&#34; name=&#34;sec-1-35-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;we-need-to-agree-that-treating-each-other-well-is-important-a-id-sec-1-35-2-name-sec-1-35-2-a&#34;&gt;We need to agree that treating each other well is important&lt;a id=&#34;sec-1-35-2&#34; name=&#34;sec-1-35-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;51-18-local-dev-vs-open-dev-a-id-sec-1-36-name-sec-1-36-a&#34;&gt;51:18 Local dev vs Open dev&lt;a id=&#34;sec-1-36&#34; name=&#34;sec-1-36&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;incompatible-churn-acceptable-in-private-a-id-sec-1-36-1-name-sec-1-36-1-a&#34;&gt;Incompatible churn acceptable in private&lt;a id=&#34;sec-1-36-1&#34; name=&#34;sec-1-36-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;slack-is-not-standup-a-id-sec-1-36-2-name-sec-1-36-2-a&#34;&gt;Slack is not standup&lt;a id=&#34;sec-1-36-2&#34; name=&#34;sec-1-36-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;os-user-base-is-open-and-unknown-a-id-sec-1-36-3-name-sec-1-36-3-a&#34;&gt;OS user base is open and unknown&lt;a id=&#34;sec-1-36-3&#34; name=&#34;sec-1-36-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;54-18-coding-for-growth-a-id-sec-1-37-name-sec-1-37-a&#34;&gt;54:18 Coding for Growth&lt;a id=&#34;sec-1-37&#34; name=&#34;sec-1-37&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;open-specs-and-data-formats-are-key-a-id-sec-1-37-1-name-sec-1-37-1-a&#34;&gt;Open specs and data formats are key&lt;a id=&#34;sec-1-37-1&#34; name=&#34;sec-1-37-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;specs-are-about-what-you-can-do-not-about-what-you-can-t-a-id-sec-1-37-2-name-sec-1-37-2-a&#34;&gt;Specs are about what you can do, not about what you can&amp;rsquo;t&lt;a id=&#34;sec-1-37-2&#34; name=&#34;sec-1-37-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;prohibition-turns-growth-into-breakage-cascades-a-id-sec-1-37-3-name-sec-1-37-3-a&#34;&gt;Prohibition turns growth into breakage, cascades&lt;a id=&#34;sec-1-37-3&#34; name=&#34;sec-1-37-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;always-presume-you-might-be-handed-more-than-what-you-need-or-know-about-a-id-sec-1-37-4-name-sec-1-37-4-a&#34;&gt;Always presume you might be handed more than what you need or know about&lt;a id=&#34;sec-1-37-4&#34; name=&#34;sec-1-37-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;ignore, or have policy for it&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;58-31-what-about-iterative-development-a-id-sec-1-38-name-sec-1-38-a&#34;&gt;58:31 What about Iterative Development?&lt;a id=&#34;sec-1-38&#34; name=&#34;sec-1-38&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;alphas-are-ok-a-id-sec-1-38-1-name-sec-1-38-1-a&#34;&gt;Alphas are OK&lt;a id=&#34;sec-1-38-1&#34; name=&#34;sec-1-38-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;but-maybe-should-be-in-artifactid-a-id-sec-1-38-2-name-sec-1-38-2-a&#34;&gt;But maybe should be in artifactId&lt;a id=&#34;sec-1-38-2&#34; name=&#34;sec-1-38-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;or-incremental-api-publishing-a-id-sec-1-38-3-name-sec-1-38-3-a&#34;&gt;Or - incremental API &amp;lsquo;publishing&amp;rsquo;&lt;a id=&#34;sec-1-38-3&#34; name=&#34;sec-1-38-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;open-source-is-not-an-excuse-for-indefinite-public-thrashing-around-a-id-sec-1-38-4-name-sec-1-38-4-a&#34;&gt;Open source is not an excuse for indefinite public thrashing around&lt;a id=&#34;sec-1-38-4&#34; name=&#34;sec-1-38-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;1-00-14-the-only-truth-is-runtime-a-id-sec-1-39-name-sec-1-39-a&#34;&gt;1:00:14 The Only Truth is Runtime&lt;a id=&#34;sec-1-39&#34; name=&#34;sec-1-39&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;deps-poms-are-just-suggestions-a-id-sec-1-39-1-name-sec-1-39-1-a&#34;&gt;Deps/POMs are just suggestions&lt;a id=&#34;sec-1-39-1&#34; name=&#34;sec-1-39-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;can be full of &amp;lsquo;conflicts&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;someone-needs-to-build-a-classpath-a-id-sec-1-39-2-name-sec-1-39-2-a&#34;&gt;Someone needs to build a classpath&lt;a id=&#34;sec-1-39-2&#34; name=&#34;sec-1-39-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;that alone determines runtime context&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;possibly-a-lib-set-that-none-of-the-components-have-ever-run-against-a-id-sec-1-39-3-name-sec-1-39-3-a&#34;&gt;Possibly a lib set that none of the components have ever run against&lt;a id=&#34;sec-1-39-3&#34; name=&#34;sec-1-39-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;1-01-59-testing-is-runtime-dependent-a-id-sec-1-40-name-sec-1-40-a&#34;&gt;1:01:59 Testing is Runtime Dependent&lt;a id=&#34;sec-1-40&#34; name=&#34;sec-1-40&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;and-runtimes-are-independent-if-related-of-dev-and-build-time-deps-a-id-sec-1-40-1-name-sec-1-40-1-a&#34;&gt;And runtimes are independent (if related) of dev- and build-time deps&lt;a id=&#34;sec-1-40-1&#34; name=&#34;sec-1-40-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;plus-you-can-t-test-against-an-open-set-of-consumers-a-id-sec-1-40-2-name-sec-1-40-2-a&#34;&gt;Plus, you can&amp;rsquo;t test against an open set of consumers&lt;a id=&#34;sec-1-40-2&#34; name=&#34;sec-1-40-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;artifact-release-testing-is-inherently-limited-a-id-sec-1-40-3-name-sec-1-40-3-a&#34;&gt;Artifact release testing is inherently limited&lt;a id=&#34;sec-1-40-3&#34; name=&#34;sec-1-40-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;we-could-be-reifying-artifact-sets-at-a-macro-e-g-app-or-multi-app-level-a-id-sec-1-40-4-name-sec-1-40-4-a&#34;&gt;We could be reifying artifact sets at a macro (e.g. app or multi-app) level&lt;a id=&#34;sec-1-40-4&#34; name=&#34;sec-1-40-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;1-03-47-live-coding-demo-a-id-sec-1-41-name-sec-1-41-a&#34;&gt;1:03:47 (Live Coding Demo)&lt;a id=&#34;sec-1-41&#34; name=&#34;sec-1-41&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;1-04-00-what-about-web-services-a-id-sec-1-42-name-sec-1-42-a&#34;&gt;1:04:00 What about Web Services?&lt;a id=&#34;sec-1-42&#34; name=&#34;sec-1-42&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;same-problems-same-mistakes-a-id-sec-1-42-1-name-sec-1-42-1-a&#34;&gt;Same problems, same mistakes&lt;a id=&#34;sec-1-42-1&#34; name=&#34;sec-1-42-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;lsquo;versioning&amp;rsquo; non-answer&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;conflating collections w/contents&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;web-service-is-collection-of-ops-a-id-sec-1-42-2-name-sec-1-42-2-a&#34;&gt;Web service is collection of ops&lt;a id=&#34;sec-1-42-2&#34; name=&#34;sec-1-42-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;ops-require-provide-a-id-sec-1-42-3-name-sec-1-42-3-a&#34;&gt;ops require/provide&lt;a id=&#34;sec-1-42-3&#34; name=&#34;sec-1-42-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;accretion-could-prevent-a-lot-of-client-service-version-hell-a-id-sec-1-42-4-name-sec-1-42-4-a&#34;&gt;Accretion could prevent a lot of client/service version hell&lt;a id=&#34;sec-1-42-4&#34; name=&#34;sec-1-42-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;1-07-04-we-need-to-bring-fp-to-the-library-ecosystem-a-id-sec-1-43-name-sec-1-43-a&#34;&gt;1:07:04 We Need to Bring FP to the Library Ecosystem&lt;a id=&#34;sec-1-43&#34; name=&#34;sec-1-43&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;currently-update-in-place-excused-but-not-corrected-by-versioning-a-id-sec-1-43-1-name-sec-1-43-1-a&#34;&gt;Currently update-in-place, excused but not corrected by versioning&lt;a id=&#34;sec-1-43-1&#34; name=&#34;sec-1-43-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;dependency hell == mutability hell&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;makes-programming-fragile-a-id-sec-1-43-2-name-sec-1-43-2-a&#34;&gt;Makes programming fragile&lt;a id=&#34;sec-1-43-2&#34; name=&#34;sec-1-43-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;libraries-less-useful-a-id-sec-1-43-3-name-sec-1-43-3-a&#34;&gt;Libraries less useful&lt;a id=&#34;sec-1-43-3&#34; name=&#34;sec-1-43-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Even undesirable, whatever their features&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;1-08-19-this-is-impossible-impractical-a-id-sec-1-44-name-sec-1-44-a&#34;&gt;1:08:19 &amp;ldquo;This is Impossible/Impractical&amp;rdquo;&lt;a id=&#34;sec-1-44&#34; name=&#34;sec-1-44&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;nope-a-id-sec-1-44-1-name-sec-1-44-1-a&#34;&gt;Nope&lt;a id=&#34;sec-1-44-1&#34; name=&#34;sec-1-44-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;many-examples-of-decade-compatibility-a-id-sec-1-44-2-name-sec-1-44-2-a&#34;&gt;Many examples of decade+ compatibility&lt;a id=&#34;sec-1-44-2&#34; name=&#34;sec-1-44-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Unix APIs&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Java&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTML&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clojure?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;compatibility-a-prerequisite-of-success-a-id-sec-1-44-3-name-sec-1-44-3-a&#34;&gt;Compatibility a prerequisite of success?&lt;a id=&#34;sec-1-44-3&#34; name=&#34;sec-1-44-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;1-09-47-what-if-we-never-broke-anything-a-id-sec-1-45-name-sec-1-45-a&#34;&gt;1:09:47 What If We Never Broke Anything?&lt;a id=&#34;sec-1-45&#34; name=&#34;sec-1-45&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;names-become-enduringly-meaningful-a-id-sec-1-45-1-name-sec-1-45-1-a&#34;&gt;names become enduringly meaningful&lt;a id=&#34;sec-1-45-1&#34; name=&#34;sec-1-45-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;orthogonal-compatibility-checking-becomes-possible-a-id-sec-1-45-2-name-sec-1-45-2-a&#34;&gt;orthogonal compatibility checking becomes possible&lt;a id=&#34;sec-1-45-2&#34; name=&#34;sec-1-45-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;find-grained-deps-can-be-explored-a-id-sec-1-45-3-name-sec-1-45-3-a&#34;&gt;find-grained deps can be explored&lt;a id=&#34;sec-1-45-3&#34; name=&#34;sec-1-45-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;use-the-latest-with-impunity-a-id-sec-1-45-4-name-sec-1-45-4-a&#34;&gt;use the latest with impunity&lt;a id=&#34;sec-1-45-4&#34; name=&#34;sec-1-45-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;compose-with-impunity-a-id-sec-1-45-5-name-sec-1-45-5-a&#34;&gt;compose with impunity&lt;a id=&#34;sec-1-45-5&#34; name=&#34;sec-1-45-5&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;1-10-54-open-challenges-a-id-sec-1-46-name-sec-1-46-a&#34;&gt;1:10:54 Open Challenges&lt;a id=&#34;sec-1-46&#34; name=&#34;sec-1-46&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;we-can-t-see-some-changes-a-id-sec-1-46-1-name-sec-1-46-1-a&#34;&gt;We can&amp;rsquo;t &amp;lsquo;see&amp;rsquo; some changes&lt;a id=&#34;sec-1-46-1&#34; name=&#34;sec-1-46-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;collection adds are easy&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;fn args/ret not visible in source&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;specs can help&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;spec-compatibility-context-dependent-a-id-sec-1-46-2-name-sec-1-46-2-a&#34;&gt;spec compatibility context-dependent&lt;a id=&#34;sec-1-46-2&#34; name=&#34;sec-1-46-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;provide vs require&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;repo-artifact-namespaces-not-first-class-a-id-sec-1-46-3-name-sec-1-46-3-a&#34;&gt;repo-&amp;gt;artifact-&amp;gt;namespaces not first class&lt;a id=&#34;sec-1-46-3&#34; name=&#34;sec-1-46-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;tooling-that-reinforces-the-status-quo-a-id-sec-1-46-4-name-sec-1-46-4-a&#34;&gt;tooling that reinforces the status quo&lt;a id=&#34;sec-1-46-4&#34; name=&#34;sec-1-46-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h1 id=&#34;1-12-40-opportunities-for-clojure-a-id-sec-1-47-name-sec-1-47-a&#34;&gt;1:12:40 Opportunities for Clojure&lt;a id=&#34;sec-1-47&#34; name=&#34;sec-1-47&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;spec-a-id-sec-1-47-1-name-sec-1-47-1-a&#34;&gt;spec&lt;a id=&#34;sec-1-47-1&#34; name=&#34;sec-1-47-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;flexible-vs-fragile-brittle-dep-awareness-a-id-sec-1-47-2-name-sec-1-47-2-a&#34;&gt;Flexible (vs fragile/brittle) dep awareness&lt;a id=&#34;sec-1-47-2&#34; name=&#34;sec-1-47-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;explicit-code-artifact-repo-support-a-id-sec-1-47-3-name-sec-1-47-3-a&#34;&gt;Explicit code-&amp;gt;artifact/repo support&lt;a id=&#34;sec-1-47-3&#34; name=&#34;sec-1-47-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;first-class-fine-grained-publish-for-apis-a-id-sec-1-47-4-name-sec-1-47-4-a&#34;&gt;First-class, fine-grained &amp;lsquo;publish&amp;rsquo; for APIs&lt;a id=&#34;sec-1-47-4&#34; name=&#34;sec-1-47-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;ditto deprecation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;testing-based-on-fine-grained-deps-a-id-sec-1-47-5-name-sec-1-47-5-a&#34;&gt;Testing based on fine-grained deps&lt;a id=&#34;sec-1-47-5&#34; name=&#34;sec-1-47-5&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;generative testing needs this&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;1-14-23-exchange-change-a-id-sec-1-48-name-sec-1-48-a&#34;&gt;1:14:23 Exchange &amp;gt; Change&lt;a id=&#34;sec-1-48&#34; name=&#34;sec-1-48&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;grow-your-software-a-id-sec-1-48-1-name-sec-1-48-1-a&#34;&gt;Grow your software&lt;a id=&#34;sec-1-48-1&#34; name=&#34;sec-1-48-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;give-birth-to-variation-a-id-sec-1-48-2-name-sec-1-48-2-a&#34;&gt;Give birth to variation&lt;a id=&#34;sec-1-48-2&#34; name=&#34;sec-1-48-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Don&amp;rsquo;t break, accrete&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;think-of-the-children-consumers-a-id-sec-1-48-3-name-sec-1-48-3-a&#34;&gt;Think of the -children- consumers&lt;a id=&#34;sec-1-48-3&#34; name=&#34;sec-1-48-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;move-forward-without-burning-bridges-a-id-sec-1-48-4-name-sec-1-48-4-a&#34;&gt;Move forward without burning bridges&lt;a id=&#34;sec-1-48-4&#34; name=&#34;sec-1-48-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;create-a-lib-service-ecosystem-of-which-we-can-all-be-proud-a-id-sec-1-48-5-name-sec-1-48-5-a&#34;&gt;Create a lib/service ecosystem of which we can all be proud&lt;a id=&#34;sec-1-48-5&#34; name=&#34;sec-1-48-5&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;style&gt;
#content h1 {
  margin-top: 1em;
  border-top: 1px solid #888;
}

#content h2 {
  font-size: 13px;
}
&lt;/style&gt;
</description>
    </item>
    
    <item>
      <title>Why I Chose Hugo</title>
      <link>http://beppu.github.io/post/why-i-chose-hugo/</link>
      <pubDate>Wed, 19 Oct 2016 09:20:15 -0700</pubDate>
      
      <guid>http://beppu.github.io/post/why-i-chose-hugo/</guid>
      <description>

&lt;h3 id=&#34;why-did-you-pick-hugo-and-go-instead-of-github-s-jekyll&#34;&gt;Why did you pick hugo (and Go) instead of github&amp;rsquo;s jekyll?&lt;/h3&gt;

&lt;p&gt;I was initially going to use Jekyll, but when I tried to do a &lt;code&gt;bundle install&lt;/code&gt;, one of the dependencies failed to install.  I didn&amp;rsquo;t feel like fighting that battle, so I decided to try Hugo instead since I had looked at it in the past.&lt;/p&gt;

&lt;p&gt;What I liked about Hugo was that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it was fast,&lt;/li&gt;
&lt;li&gt;it had a nice selection of &lt;strong&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;themes&lt;/a&gt;&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;its blogging functionality was adequate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As for Go, it wasn&amp;rsquo;t a major factor in choosing a static site generator for me.&lt;/p&gt;

&lt;h3 id=&#34;how-proficient-you-need-to-be-in-go-to-use-hugo&#34;&gt;How proficient you need to be in Go to use Hugo?&lt;/h3&gt;

&lt;p&gt;You don&amp;rsquo;t need to know Go at all, and I haven&amp;rsquo;t even looked at a line of Hugo&amp;rsquo;s Go code yet.&lt;/p&gt;

&lt;p&gt;However, what you do need is some proficiency with the Unix shell so that you can run the various &lt;code&gt;hugo&lt;/code&gt; commands and navigate the directory structure it generates for you.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s also helpful for when things go wrong and you need to debug.  For example, this &lt;strong&gt;&lt;a href=&#34;http://themes.gohugo.io/future-imperfect/&#34;&gt;theme&lt;/a&gt;&lt;/strong&gt; that I&amp;rsquo;m using was slightly buggy out of the box, and I had to move some files around to make it work.&lt;/p&gt;

&lt;h3 id=&#34;did-you-try-other-static-site-generators&#34;&gt;Did you try other static site generators?&lt;/h3&gt;

&lt;p&gt;I did go over to &lt;a href=&#34;https://www.staticgen.com/&#34;&gt;https://www.staticgen.com/&lt;/a&gt; and look over the list.  I remembered that Hugo was one of the ones you liked, so I gave that a try first, and I liked it.  Thus, the search ended rather quickly.&lt;/p&gt;

&lt;h3 id=&#34;your-thoughts-on-storing-comments-on-your-own&#34;&gt;Your thoughts on storing comments on your own&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;(it&amp;rsquo;d probably require a dynamic site, though I saw some weird IMAP tricks with Pelican a while ago) vs using something like Disqus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On blogs where the topic matter makes censorship unlikely, I don&amp;rsquo;t mind delegating comments to a system like Disqus.  If I were running a blog with political commentary, I would definitely want to handle comments locally, though.&lt;/p&gt;

&lt;p&gt;To be honest, I was actually surprised when I saw the Disqus comment widget when I published it to GitHub, because they didn&amp;rsquo;t show up at all while I was developing the site locally.  It&amp;rsquo;s using someone else&amp;rsquo;s generic Disqus forum and not one that I set up myself.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;I should probably fix that.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;I fixed it &amp;ndash; I have my own disqus forum now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Choosing Frameworks</title>
      <link>http://beppu.github.io/post/on-choosing-frameworks/</link>
      <pubDate>Tue, 18 Oct 2016 14:50:07 -0700</pubDate>
      
      <guid>http://beppu.github.io/post/on-choosing-frameworks/</guid>
      <description>&lt;p&gt;A friend of mine who is an experienced systems programmer was working on familiarizing himself with web development, and he was overwhelmed by all the choices he had to make.  This was my advice to him:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The explosion of frameworks is a headache for everyone, but you don&amp;rsquo;t have to know all of them, because no one does.  You&amp;rsquo;re just going to have to pick a couple and go with them for a while.&lt;/p&gt;

&lt;p&gt;On the server side, there are many adequate frameworks these days.  What you should pick is largely determined by what server side language you&amp;rsquo;re comfortable with.  This filter reduces the size of the list considerably.  Then, from what&amp;rsquo;s left, pick a framework that is actively being maintained and has good documentation.  As long as they give you good control over HTTP requests and responses, you&amp;rsquo;re good to go.  It&amp;rsquo;s hard to go wrong here, because almost anything can be made to work adequately &amp;ndash; HTTP servers are well understood today.&lt;/p&gt;

&lt;p&gt;On the client side, there were two major eras of library wars so far.  In the mid to late 2000s, there was a battle between Prototype, jQuery, and a bunch of other Javascript utility libraries.  jQuery was the winner of that era, and it would be good to have basic familiarity with jQuery even though it&amp;rsquo;s gone out of fashion now.&lt;/p&gt;

&lt;p&gt;The second major library war on the client side was waged between Backbone, Angular, React, and many others &amp;ndash; too many to name.  This war started in the early 2010s, and it is ongoing, but I believe the winner is React.js.  It has many good qualities going for it, but it is also very different from anything that came before it.&lt;/p&gt;

&lt;p&gt;This blog post on React.js was probably the turning point that made a lot of people start taking it seriously.  &lt;a href=&#34;http://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs&#34;&gt;http://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It showed that React.js could be extremely performant while also promoting a style of programming that made client-side UI behavior a lot more predictable than it had been in the past.  (Believe me, it was (and sometimes still is) a mess.)&lt;/p&gt;

&lt;p&gt;Another big plus for React.js is that it can be used to develop native Android and iOS applications which few other libraries can claim.  Perhaps no other library can do this, because the main idea behind React.js is to represent your UI as a pure function, and this is a broad idea that isn&amp;rsquo;t confined to just HTML.  This makes it special among the client side libraries.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s downside (if you could call it that) is that the Facebook engineers who made it are fond of source code transformers, so you&amp;rsquo;re development setup will need to have tools like WebPack, Babel, sometimes Flow, etc&amp;hellip;  configured.  That&amp;rsquo;s a god damned headache, but such is life in the web development world.  Hopefully, you only have to set it up once in the beginning and not worry about it later, but I find it annoying to need all these tools.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://beppu.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beppu.github.io/about/</guid>
      <description>&lt;p&gt;This is where I&amp;rsquo;ll collect my thoughts on technology.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>